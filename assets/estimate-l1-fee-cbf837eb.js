import{B as u,cx as E,cw as P,cX as X,S as Z,$ as q,ab as i,a9 as O,cv as J,V as w,a1 as v,cY as Q,cZ as ee,c_ as F,c$ as I,aw as te,af as ne,ac as oe}from"./index-85f30e3b.js";import{t as y}from"./toRlp-3d224411.js";const se={ether:-9,wei:9};function re(e,t){let n=e.toString();const o=n.startsWith("-");o&&(n=n.slice(1)),n=n.padStart(t,"0");let[s,r]=[n.slice(0,n.length-t),n.slice(n.length-t)];return r=r.replace(/(0+)$/,""),`${o?"-":""}${s||"0"}${r?`.${r}`:""}`}function B(e,t="wei"){return re(e,se[t])}function ie(e){const t=Object.entries(e).map(([o,s])=>s===void 0||s===!1?null:[o,s]).filter(Boolean),n=t.reduce((o,[s])=>Math.max(o,s.length),0);return t.map(([o,s])=>`  ${`${o}:`.padEnd(n+1)}  ${s}`).join(`
`)}class ae extends u{constructor({v:t}){super(`Invalid \`v\` value "${t}". Expected 27 or 28.`,{name:"InvalidLegacyVError"})}}class ce extends u{constructor({transaction:t}){super("Cannot infer a transaction type from provided transaction.",{metaMessages:["Provided Transaction:","{",ie(t),"}","","To infer the type, either provide:","- a `type` to the Transaction, or","- an EIP-1559 Transaction with `maxFeePerGas`, or","- an EIP-2930 Transaction with `gasPrice` & `accessList`, or","- an EIP-4844 Transaction with `blobs`, `blobVersionedHashes`, `sidecars`, or","- an EIP-7702 Transaction with `authorizationList`, or","- a Legacy Transaction with `gasPrice`"],name:"InvalidSerializableTransactionError"})}}class fe extends u{constructor({storageKey:t}){super(`Size for storage key "${t}" is invalid. Expected 32 bytes. Got ${Math.floor((t.length-2)/2)} bytes.`,{name:"InvalidStorageKeySizeError"})}}class $ extends u{constructor({cause:t,maxFeePerGas:n}={}){super(`The fee cap (\`maxFeePerGas\`${n?` = ${B(n)} gwei`:""}) cannot be higher than the maximum allowed value (2^256-1).`,{cause:t,name:"FeeCapTooHighError"})}}Object.defineProperty($,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/max fee per gas higher than 2\^256-1|fee cap higher than 2\^256-1/});class _ extends u{constructor({cause:t,maxPriorityFeePerGas:n,maxFeePerGas:o}={}){super([`The provided tip (\`maxPriorityFeePerGas\`${n?` = ${B(n)} gwei`:""}) cannot be higher than the fee cap (\`maxFeePerGas\`${o?` = ${B(o)} gwei`:""}).`].join(`
`),{cause:t,name:"TipAboveFeeCapError"})}}Object.defineProperty(_,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/max priority fee per gas higher than max fee per gas|tip higher than fee cap/});function U(e){const{kzg:t}=e,n=e.to??(typeof e.blobs[0]=="string"?"hex":"bytes"),o=typeof e.blobs[0]=="string"?e.blobs.map(r=>E(r)):e.blobs,s=[];for(const r of o)s.push(Uint8Array.from(t.blobToKzgCommitment(r)));return n==="bytes"?s:s.map(r=>P(r))}function R(e){const{kzg:t}=e,n=e.to??(typeof e.blobs[0]=="string"?"hex":"bytes"),o=typeof e.blobs[0]=="string"?e.blobs.map(a=>E(a)):e.blobs,s=typeof e.commitments[0]=="string"?e.commitments.map(a=>E(a)):e.commitments,r=[];for(let a=0;a<o.length;a++){const c=o[a],f=s[a];r.push(Uint8Array.from(t.computeBlobKzgProof(c,f)))}return n==="bytes"?r:r.map(a=>P(a))}function de(e,t){const n=t||"hex",o=X(Z(e,{strict:!1})?q(e):e);return n==="bytes"?o:i(o)}function le(e){const{commitment:t,version:n=1}=e,o=e.to??(typeof t=="string"?"hex":"bytes"),s=de(t,"bytes");return s.set([n],0),o==="bytes"?s:P(s)}function ue(e){const{commitments:t,version:n}=e,o=e.to??(typeof t[0]=="string"?"hex":"bytes"),s=[];for(const r of t)s.push(le({commitment:r,to:o,version:n}));return s}const j=6,D=32,A=4096,Y=D*A,K=Y*j-1-1*A*j,N=1;class he extends u{constructor({maxSize:t,size:n}){super("Blob size is too large.",{metaMessages:[`Max: ${t} bytes`,`Given: ${n} bytes`],name:"BlobSizeTooLargeError"})}}class W extends u{constructor(){super("Blob data must not be empty.",{name:"EmptyBlobError"})}}class be extends u{constructor({hash:t,size:n}){super(`Versioned hash "${t}" size is invalid.`,{metaMessages:["Expected: 32",`Received: ${n}`],name:"InvalidVersionedHashSizeError"})}}class me extends u{constructor({hash:t,version:n}){super(`Versioned hash "${t}" version is invalid.`,{metaMessages:[`Expected: ${N}`,`Received: ${n}`],name:"InvalidVersionedHashVersionError"})}}function xe(e){const t=e.to??(typeof e.data=="string"?"hex":"bytes"),n=typeof e.data=="string"?E(e.data):e.data,o=O(n);if(!o)throw new W;if(o>K)throw new he({maxSize:K,size:o});const s=[];let r=!0,a=0;for(;r;){const c=J(new Uint8Array(Y));let f=0;for(;f<A;){const d=n.slice(a,a+(D-1));if(c.pushByte(0),c.pushBytes(d),d.length<31){c.pushByte(128),r=!1;break}f++,a+=31}s.push(c)}return t==="bytes"?s.map(c=>c.bytes):s.map(c=>P(c.bytes))}function ye(e){const{data:t,kzg:n,to:o}=e,s=e.blobs??xe({data:t,to:o}),r=e.commitments??U({blobs:s,kzg:n,to:o}),a=e.proofs??R({blobs:s,commitments:r,kzg:n,to:o}),c=[];for(let f=0;f<s.length;f++)c.push({blob:s[f],commitment:r[f],proof:a[f]});return c}function pe(e){if(e.type)return e.type;if(typeof e.authorizationList<"u")return"eip7702";if(typeof e.blobs<"u"||typeof e.blobVersionedHashes<"u"||typeof e.maxFeePerBlobGas<"u"||typeof e.sidecars<"u")return"eip4844";if(typeof e.maxFeePerGas<"u"||typeof e.maxPriorityFeePerGas<"u")return"eip1559";if(typeof e.gasPrice<"u")return typeof e.accessList<"u"?"eip2930":"legacy";throw new ce({transaction:e})}class G extends u{constructor({chainId:t}){super(typeof t=="number"?`Chain ID "${t}" is invalid.`:"Chain ID is invalid.",{name:"InvalidChainIdError"})}}function ge(e){const{authorizationList:t}=e;if(t)for(const n of t){const{contractAddress:o,chainId:s}=n;if(!w(o))throw new v({address:o});if(s<=0)throw new G({chainId:s})}H(e)}function Pe(e){const{blobVersionedHashes:t}=e;if(t){if(t.length===0)throw new W;for(const n of t){const o=O(n),s=Q(ee(n,0,1));if(o!==32)throw new be({hash:n,size:o});if(s!==N)throw new me({hash:n,version:s})}}H(e)}function H(e){const{chainId:t,maxPriorityFeePerGas:n,maxFeePerGas:o,to:s}=e;if(t<=0)throw new G({chainId:t});if(s&&!w(s))throw new v({address:s});if(o&&o>2n**256n-1n)throw new $({maxFeePerGas:o});if(n&&o&&n>o)throw new _({maxFeePerGas:o,maxPriorityFeePerGas:n})}function we(e){const{chainId:t,maxPriorityFeePerGas:n,gasPrice:o,maxFeePerGas:s,to:r}=e;if(t<=0)throw new G({chainId:t});if(r&&!w(r))throw new v({address:r});if(n||s)throw new u("`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute.");if(o&&o>2n**256n-1n)throw new $({maxFeePerGas:o})}function ve(e){const{chainId:t,maxPriorityFeePerGas:n,gasPrice:o,maxFeePerGas:s,to:r}=e;if(r&&!w(r))throw new v({address:r});if(typeof t<"u"&&t<=0)throw new G({chainId:t});if(n||s)throw new u("`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute.");if(o&&o>2n**256n-1n)throw new $({maxFeePerGas:o})}function ze(e){if(!e||e.length===0)return[];const t=[];for(const n of e){const{contractAddress:o,chainId:s,nonce:r,...a}=n;t.push([i(s),o,i(r),...z({},a)])}return t}function L(e){if(!e||e.length===0)return[];const t=[];for(let n=0;n<e.length;n++){const{address:o,storageKeys:s}=e[n];for(let r=0;r<s.length;r++)if(s[r].length-2!==64)throw new fe({storageKey:s[r]});if(!w(o,{strict:!1}))throw new v({address:o});t.push([o,s])}return t}function Te(e,t){const n=pe(e);return n==="eip1559"?Fe(e,t):n==="eip2930"?$e(e,t):n==="eip4844"?Ie(e,t):n==="eip7702"?Ee(e,t):Ge(e,t)}function Ee(e,t){const{authorizationList:n,chainId:o,gas:s,nonce:r,to:a,value:c,maxFeePerGas:f,maxPriorityFeePerGas:d,accessList:m,data:b}=e;ge(e);const h=L(m),l=ze(n);return F(["0x04",y([i(o),r?i(r):"0x",d?i(d):"0x",f?i(f):"0x",s?i(s):"0x",a??"0x",c?i(c):"0x",b??"0x",h,l,...z(e,t)])])}function Ie(e,t){const{chainId:n,gas:o,nonce:s,to:r,value:a,maxFeePerBlobGas:c,maxFeePerGas:f,maxPriorityFeePerGas:d,accessList:m,data:b}=e;Pe(e);let h=e.blobVersionedHashes,l=e.sidecars;if(e.blobs&&(typeof h>"u"||typeof l>"u")){const x=typeof e.blobs[0]=="string"?e.blobs:e.blobs.map(g=>P(g)),T=e.kzg,p=U({blobs:x,kzg:T});if(typeof h>"u"&&(h=ue({commitments:p})),typeof l>"u"){const g=R({blobs:x,commitments:p,kzg:T});l=ye({blobs:x,commitments:p,proofs:g})}}const S=L(m),V=[i(n),s?i(s):"0x",d?i(d):"0x",f?i(f):"0x",o?i(o):"0x",r??"0x",a?i(a):"0x",b??"0x",S,c?i(c):"0x",h??[],...z(e,t)],C=[],k=[],M=[];if(l)for(let x=0;x<l.length;x++){const{blob:T,commitment:p,proof:g}=l[x];C.push(T),k.push(p),M.push(g)}return F(["0x03",l?y([V,C,k,M]):y(V)])}function Fe(e,t){const{chainId:n,gas:o,nonce:s,to:r,value:a,maxFeePerGas:c,maxPriorityFeePerGas:f,accessList:d,data:m}=e;H(e);const b=L(d),h=[i(n),s?i(s):"0x",f?i(f):"0x",c?i(c):"0x",o?i(o):"0x",r??"0x",a?i(a):"0x",m??"0x",b,...z(e,t)];return F(["0x02",y(h)])}function $e(e,t){const{chainId:n,gas:o,data:s,nonce:r,to:a,value:c,accessList:f,gasPrice:d}=e;we(e);const m=L(f),b=[i(n),r?i(r):"0x",d?i(d):"0x",o?i(o):"0x",a??"0x",c?i(c):"0x",s??"0x",m,...z(e,t)];return F(["0x01",y(b)])}function Ge(e,t){const{chainId:n=0,gas:o,data:s,nonce:r,to:a,value:c,gasPrice:f}=e;ve(e);let d=[r?i(r):"0x",f?i(f):"0x",o?i(o):"0x",a??"0x",c?i(c):"0x",s??"0x"];if(t){const m=(()=>{if(t.v>=35n)return(t.v-35n)/2n>0?t.v:27n+(t.v===35n?0n:1n);if(n>0)return BigInt(n*2)+BigInt(35n+t.v-27n);const l=27n+(t.v===27n?0n:1n);if(t.v!==l)throw new ae({v:t.v});return l})(),b=I(t.r),h=I(t.s);d=[...d,i(m),b==="0x00"?"0x":b,h==="0x00"?"0x":h]}else n>0&&(d=[...d,i(n),"0x","0x"]);return y(d)}function z(e,t){const n=t??e,{v:o,yParity:s}=n;if(typeof n.r>"u")return[];if(typeof n.s>"u")return[];if(typeof o>"u"&&typeof s>"u")return[];const r=I(n.r),a=I(n.s);return[(()=>typeof s=="number"?s?i(1):"0x":o===0n?"0x":o===1n?i(1):o===27n?"0x":i(1))(),r==="0x00"?"0x":r,a==="0x00"?"0x":a]}const Le="0x420000000000000000000000000000000000000F";async function He(e){const{transaction:t,gasPriceOracleAddress:n}=e,o=te({client:t.client,address:n||Le,chain:t.chain}),{gasPrice:s,...r}=await ne({transaction:t}),a=Te({...r,type:"eip1559"});return oe({contract:o,method:"function getL1Fee(bytes memory _data) view returns (uint256)",params:[a]})}export{He as estimateL1Fee};
